-------------------
CSE247 Robot tester starts testing heaps on 2018-12-17 15:58:15 -0500

========
Testing in ./GradingRepos/repos/cse247-f18-students-teng.ming-che: heaps as of 2018-09-29 09:00
========
Now in: /Users/puneetsachdeva/CSE247/cse247-support/GradingRepos/repos/cse247-f18-students-teng.ming-che
Your branch is up to date with 'origin/master'.
HEAD is now at 2214ba5 robograde
No local changes to save

Updating 2214ba5..17b0d25
Fast-forward
 RoboGrade/hash-test.TestStringTable.txt | 63 ++++++++-------------------------
 1 file changed, 14 insertions(+), 49 deletions(-)
Going back in time to: 2018-09-29 09:00
At hash a53d078cb374bbbe0a8375dc415370cf775e6430

Buildfile: /Users/puneetsachdeva/CSE247/cse247-support/build.xml

copytest:
     [echo] would copy from /Users/puneetsachdeva/CSE247/cse247-f18-students key teng.ming-che testfilesource test/TestMinHeap package heaps repo ./GradingRepos/repos/cse247-f18-students-teng.ming-che
     [copy] Copying 1 file to /Users/puneetsachdeva/CSE247/cse247-support/GradingRepos/repos/cse247-f18-students-teng.ming-che/labs/heaps/test

BUILD SUCCESSFUL
Total time: 0 seconds
Compiling the code
Buildfile: /Users/puneetsachdeva/CSE247/cse247-support/build.xml

compile:
     [echo] Compiling heaps/MinHeap
    [mkdir] Created dir: /Users/puneetsachdeva/CSE247/cse247-support/GradingRepos/repos/cse247-f18-students-teng.ming-che/bin
    [javac] Compiling 1 source file to /Users/puneetsachdeva/CSE247/cse247-support/GradingRepos/repos/cse247-f18-students-teng.ming-che/bin

BUILD SUCCESSFUL
Total time: 1 second
Buildfile: /Users/puneetsachdeva/CSE247/cse247-support/build.xml

compile:
     [echo] Compiling heaps/test/TestMinHeap
    [javac] Compiling 1 source file to /Users/puneetsachdeva/CSE247/cse247-support/GradingRepos/repos/cse247-f18-students-teng.ming-che/bin

BUILD SUCCESSFUL
Total time: 1 second
Running test test.TestMinHeap
Buildfile: /Users/puneetsachdeva/CSE247/cse247-support/build.xml

test:
    [junit] Running heaps.test.TestMinHeap
    [junit] Testsuite: heaps.test.TestMinHeap
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               6                               
    [junit]                3                               2                               7                               18              
    [junit]        10              5               23              4               13              24              21              20      
    [junit]    12      11      26      14      29      31      8       9       34      16      49      42      22      36      40      39  
    [junit]  41  25  35  32  33  47  27  19  44  43  37  48  45  30  15  28  46  38  17
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.854 sec
    [junit] Output:
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               6                               
    [junit]                3                               2                               7                               18              
    [junit]        10              5               23              4               13              24              21              20      
    [junit]    12      11      26      14      29      31      8       9       34      16      49      42      22      36      40      39  
    [junit]  41  25  35  32  33  47  27  19  44  43  37  48  45  30  15  28  46  38  17
    [junit] 
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.854 sec
    [junit] ------------- Standard Output ---------------
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               6                               
    [junit]                3                               2                               7                               18              
    [junit]        10              5               23              4               13              24              21              20      
    [junit]    12      11      26      14      29      31      8       9       34      16      49      42      22      36      40      39  
    [junit]  41  25  35  32  33  47  27  19  44  43  37  48  45  30  15  28  46  38  17
    [junit] 
    [junit] ------------- ---------------- ---------------
    [junit] 
    [junit] Testcase: testViaSorting took 0.059 sec
    [junit] Testcase: testEmptyHeap took 0.012 sec
    [junit] Testcase: testAndPrint took 0.022 sec
    [junit] Testcase: testExtractMin took 0.055 sec
    [junit] Testcase: testLocUpdatedHeapify took 0.007 sec
    [junit] Testcase: testInsert took 0.04 sec
    [junit] Testcase: testUsingHeapSort took 2.635 sec
    [junit] Testcase: testLocUpdatedDecrease took 0 sec

BUILD SUCCESSFUL
Total time: 3 seconds
================
Lab is counted as working
================

CSE247 Robot tester ends testing heaps on 2018-12-17 15:58:23 -0500
-------------------
